// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.disid.proofs.client.web.html;

import com.disid.proofs.client.domain.Operation;
import com.disid.proofs.client.service.api.OperationService;
import com.disid.proofs.client.web.html.OperationDeserializer;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect OperationDeserializer_Roo_EntityDeserializer {
    
    declare @type: OperationDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return OperationService
     */
    public OperationService OperationDeserializer.getOperationService() {
        return operationService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param operationService
     */
    public void OperationDeserializer.setOperationService(OperationService operationService) {
        this.operationService = operationService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService OperationDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void OperationDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return Operation
     * @throws IOException
     */
    public Operation OperationDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        Operation operation = operationService.findOne(id);
        if (operation == null) {
            throw new NotFoundException("Operation not found");
        }
        return operation;
    }
    
}
